
;; ---------------- package manager ---------------------
(package-initialize)
(require 'package)
(add-to-list
 'package-archives
 '("org-cn"   . "http://elpa.zilongshanren.com/org/"))
(add-to-list
 'package-archives
 '("gnu-cn"   . "http://elpa.zilongshanren.com/gnu/"))
(add-to-list
 'package-archives
 '("melpa" . "http://melpa.org/packages/"))


(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   (quote
    ("420459d6eeb45aadf5db5fbcc3d6990b65141c104911f7359454fc29fa9d87a0" "9240e71034689655a6c05c04063af2c90d0a831aa4e7ca24c8b6e29b5a2da946" "a5956ec25b719bf325e847864e16578c61d8af3e8a3d95f60f9040d02497e408" "62c81ae32320ceff5228edceeaa6895c029cc8f43c8c98a023f91b5b339d633f" "f27c3fcfb19bf38892bc6e72d0046af7a1ded81f54435f9d4d09b3bff9c52fc1" "cd4d1a0656fee24dc062b997f54d6f9b7da8f6dc8053ac858f15820f9a04a679" "8aebf25556399b58091e533e455dd50a6a9cba958cc4ebb0aab175863c25b9a4" "d677ef584c6dfc0697901a44b885cc18e206f05114c8a3b7fde674fce6180879" "a8245b7cc985a0610d71f9852e9f2767ad1b852c2bdea6f4aadc12cce9c4d6d0" "9d9fda57c476672acd8c6efeb9dc801abea906634575ad2c7688d055878e69d6" default)))
 '(package-selected-packages
   (quote
    (elpy dashboard go-mode go json-mode window-number nord-theme gruvbox-theme solarized-theme markdown-mode doom-themes imenu-list window-numbering)))
 '(tool-bar-mode nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;;--------------------- Python Configuration --------------------------

;;-----------------------elpy--------------------------
(elpy-enable)
;;----------------------set elpy backend--------------
;;(setq elpy-rpc-backend "jedi")
;; auto-company
;;(require 'company)
;;(add-hook 'after-init-hook 'global-company-mode) ;global
;;(setq company-show-numbers t) ; show number
;;(setq company-idle-delay 0.2) ; menu delay
;;(setq company-minimum-prefix-length 1) ; company number of words

;;----------------------font-----------------------------
;;Setting English Font
;;(set-face-attribute
;; 'default nil :font "Menlo 15")
;;(set-default-font "Menlo 14")
;;(set-frame-font "Menlo 20")
(add-to-list 'default-frame-alist '(font . "Monaco-15"))


;;----------------------windows number--------------------
;;(add-to-list 'load-path "~/.emacs.d/window/")
;;(require 'window-numbering)
(window-numbering-mode t)

(global-linum-mode t)
(setq linum-format "%d")

;;----------------------imenu list-------------------------
(add-to-list 'load-path "~/.emacs.d/imenu")
(require 'imenu-list)
(global-set-key (kbd "M-'") 'imenu-list)


;;---------------------- View -----------------------
(add-to-list 'custom-theme-load-path "~/.emacs.d/themes")
;;(load-theme 'zenburn t)
;;(load-theme 'nord t)
;;(load-theme 'solarized-dark t)
(load-theme 'gruvbox-dark-medium t)
(add-to-list 'default-frame-alist '(height . 48))
(add-to-list 'default-frame-alist '(width . 175))
(when window-system (set-frame-position (selected-frame) 240 100))
(global-set-key (kbd "C-<f11>") 'toggle-frame-fullscreen)
(set-scroll-bar-mode nil)
(setq inhibit-startup-message t)
(setq ring-bell-function #'ignore)
;;(setq redisplay-dont-pause t
;;  scroll-margin 1
;;  scroll-step 1
;;  scroll-conservatively 10000
;;  scroll-preserve-screen-position 1)

;;(setq solarized-distinct-fringe-background nil)
;;(setq solarized-use-variable-pitch nil)
;;(setq solarized-high-contrast-mode-line t)

;;---------------------aweshell--------------------
(add-to-list 'load-path (expand-file-name "~/.emacs.d/aweshell"))
(require 'aweshell)
;; switch aweshell windowns key
(global-set-key (kbd "M-[") 'aweshell-prev)
(global-set-key (kbd "M-]") 'aweshell-next)


;;--------------------- Setup Screen ------------------
(require 'dashboard)
(dashboard-setup-startup-hook)
(setq initial-buffer-choice (lambda () (get-buffer "*dashboard*")))
(setq dashboard-banner-logo-title "Specified Coding Work by Syu")
;;(setq dashboard-startup-banner "/Users/syu/.emacs.d/home_screen/logo_fish3.png")
(setq dashboard-startup-banner "~/.emacs.d/home_screen/logo_fish_dell27.png")
